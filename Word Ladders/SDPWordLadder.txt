Requirments
	- Find the shortest path between two words of the same length (Example "cat" and "dog") using linked list as a ques

	- do not allow to search for different sized words if different size word is given end search there.
	
	- find shortest ladder.

understanding 
	- using a linked list as a que, my program should use the breadth first search to search a list of words and find the quickest ladder between two words.
	- program should search words around it and for each word found add it to a partial ladder que the ladders will keep increasing until the word is found.
	- program should determine how many words were read from dictionary, be able to display all the words which are one away from a given word and be able to display the contents of the 
	partial Solution list.

design 
	- iterate over letters in word and check if word is in disctionary, if word is in dicionary add the word to queue.
	- if word is found print out queue. and total enqueues.
	- if word is not in dictionary skip the word.
	- makes sure to check if word has already been used.
	
May have problems, with coding the breadth First search, may need two linked list one to be search and one to create partial ladders as a que until a ladder is complete.

Test Case 1: first test case i was printing everything out correctly but i would end up adding goin one more itteration. i fixed this by changing my found function so that the if check for my found word was inside my add que if check function so it would only check that if statement if the word was a real word.


Test Case 2: second test case i found that my for each loop waas messing up working with the cloned list so i was using the original list which was meesing up the output if i ran all possible games. I fixed this issue by adding a function that took in a start point and a end point along with the que and the cloned list which fixed my issue so instead of messig up the real list i was working on the cloned one.

